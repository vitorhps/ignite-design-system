const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/axe-CMnRUl9W.js","assets/_commonjsHelpers-CqkleIqs.js"])))=>i.map(i=>d[i]);
import{_ as O}from"./iframe-043htIpa.js";import{e as E}from"./index-BbMcCLeF.js";const{addons:A}=__STORYBOOK_MODULE_PREVIEW_API__,{global:S}=__STORYBOOK_MODULE_GLOBAL__;var u="storybook/a11y",T=`${u}/result`,w=`${u}/request`,L=`${u}/running`,V=`${u}/error`,x=`${u}/manual`,d={RESULT:T,REQUEST:w,RUNNING:L,ERROR:V,MANUAL:x},D="a11y-test",{document:h}=S,_=A.getChannel(),v={config:{},options:{}},I=["region"],y=[],R=!1,N=async()=>{if(y.length===0){R=!1;return}R=!0;let t=y.shift();t&&await t(),N()},g=async(t=v)=>{let{default:s}=await O(async()=>{const{default:r}=await import("./axe-CMnRUl9W.js").then(o=>o.a);return{default:r}},__vite__mapDeps([0,1])),{element:i="body",config:n={},options:a={}}=t,l=h.querySelector(i)??h.body;if(!l)return;s.reset();let e={...n,rules:[...I.map(r=>({id:r,enabled:!1})),...(n==null?void 0:n.rules)??[]]};return s.configure(e),new Promise((r,o)=>{let f=async()=>{try{let c=await s.run(l,a);r(c)}catch(c){o(c)}};y.push(f),R||N()})};_.on(d.MANUAL,async(t,s=v)=>{try{let i=await g(s),n=JSON.parse(JSON.stringify(i));_.emit(d.RESULT,n,t)}catch(i){_.emit(d.ERROR,i)}});function m(){try{return!1}catch{return!1}}function U(){try{return!1}catch{return!1}}var p=!1,$=async({reporting:t,parameters:s,globals:i,tags:n})=>{let a=s.a11y,l=i.a11y;if((a==null?void 0:a.manual)!==!0&&(a==null?void 0:a.disable)!==!0&&(l==null?void 0:l.manual)!==!0){if(U()&&!n.includes(D))return;try{let e=await g(a);if(e){let r=((e==null?void 0:e.violations.length)??0)>0;if(t.addReport({type:"a11y",version:1,result:e,status:r?"failed":"passed"}),m()&&r){if(!p){let{toHaveNoViolations:o}=await O(async()=>{const{toHaveNoViolations:f}=await import("./matchers-57EZJSQE-oeXCqs4p.js");return{toHaveNoViolations:f}},[]);E.extend({toHaveNoViolations:o}),p=!0}E(e).toHaveNoViolations()}}}catch(e){if(t.addReport({type:"a11y",version:1,result:{error:e},status:"failed"}),m())throw e}}},P={a11y:{manual:!1}};export{$ as experimental_afterEach,P as initialGlobals};
